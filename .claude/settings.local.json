{
  "permissions": {
    "allow": [
      "Bash(claude mcp add:*)",
      "Bash(npm install:*)",
      "Bash(npm run storybook:*)",
      "Bash(nvm install:*)",
      "WebFetch(domain:www.figma.com)",
      "Bash(start showcase.html)",
      "mcp__figma-dev-mode-mcp-server__get_code",
      "mcp__figma-dev-mode-mcp-server__get_image",
      "Bash(npm run type-check:*)",
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(rm:*)",
      "Bash(npm run dev:*)",
      "Bash(npx storybook dev:*)",
      "Bash(git reset:*)",
      "Bash(del .gitindex.lock)",
      "Bash(git add:*)",
      "Bash(ls:*)",
      "Bash(powershell:*)",
      "Bash(npm run typecheck:*)",
      "Bash(env)",
      "WebFetch(domain:127.0.0.1)",
      "WebFetch(domain:localhost)",
      "mcp__figma-dev-mode-mcp-server__get_variable_defs",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(xcopy:*)",
      "Bash(robocopy:*)",
      "Bash(cp:*)",
      "Bash(del \"src\\components\\DocumentCell.stories.tsx\")",
      "Bash(del \"src\\components\\ActionCell.stories.tsx\")",
      "Bash(pkill:*)",
      "Bash(timeout 15s npm run storybook)",
      "Bash(timeout 10s npm run storybook)",
      "Bash(taskkill:*)",
      "WebFetch(domain:tympanus.net)",
      "Bash(npm run build:*)",
      "Bash(del \"src\\components\\StatusIcon.tsx\")",
      "Bash(tar:*)",
      "Bash(del \"E:\\Ledger design library\\design-library\\src\\components\\Notification.tsx\")",
      "Bash(claude mcp list-tools:*)",
      "Bash(claude mcp:*)",
      "Bash(npm search:*)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(del \"E:\\Ledger design library\\design-library\\src\\components\\Header.tsx\")",
      "Bash(start:*)",
      "mcp__figma-mcp__get_node_info",
      "mcp__figma-mcp__join_channel",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(del Stack.tsx Stack.stories.tsx Grid.tsx Grid.stories.tsx Container.tsx Container.stories.tsx Spacer.tsx Spacer.stories.tsx)",
      "mcp__figma-mcp__get_document_info",
      "Bash(curl:*)",
      "Read(//tmp/**)",
      "Bash(find:*)",
      "mcp__figma-dev-mode-mcp-server__get_screenshot",
      "Bash(cat:*)",
      "Bash(rg:*)",
      "Bash(Y)",
      "Bash(npx tsc:*)",
      "Bash(git restore:*)",
      "Bash(git remote set-url:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}